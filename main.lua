local map map=(function() local t4={} t4[2]=(function() local t5={} t5[1]=201 t5[2]=62 t5[3]=714 return t5 end)() t4[3]=(function() local t6={} t6[1]=179 t6[2]=62 t6[3]=718 return t6 end)() t4["minecraft:coal"]=(function() local t7={} t7[1]=180 t7[2]=62 t7[3]=697 return t7 end)() t4["minecraft:netherrack"]=(function() local t8={} t8[1]=181 t8[2]=62 t8[3]=697 return t8 end)() t4["create:shaft"]=(function() local t9={} t9[1]=182 t9[2]=62 t9[3]=697 return t9 end)() t4["thermal:apatite"]=(function() local t10={} t10[1]=183 t10[2]=62 t10[3]=697 return t10 end)() t4["minecraft:cobblestone"]=(function() local t11={} t11[1]=184 t11[2]=62 t11[3]=697 return t11 end)() t4["minecraft:ender_pearl"]=(function() local t12={} t12[1]=201 t12[2]=62 t12[3]=713 return t12 end)() t4["forbidden_arcanus:ender_pearl_fragment"]=(function() local t13={} t13[1]=201 t13[2]=62 t13[3]=714 return t13 end)() t4["minecraft:light_gray_wool"]=(function() local t14={} t14[1]=201 t14[2]=62 t14[3]=715 return t14 end)() t4["create:andesite_alloy"]=(function() local t15={} t15[1]=201 t15[2]=62 t15[3]=716 return t15 end)() t4["minecraft:chest"]=(function() local t16={} t16[1]=201 t16[2]=62 t16[3]=718 return t16 end)() return t4 end)() local home local fuel home=map[2] fuel=map[3] local orientation local desiredorientation orientation=17 local error error=false local ox local oy local oz local x local y local z local dx local dy local dz error=not(turtle.back()) ox,oy,oz=gps.locate() error=not(turtle.forward()) x,y,z=gps.locate() dx=(x-ox) dz=(z-oz) if not (dx==0) then if (dx<0) then orientation=18 else orientation=19 end end if not (dz==0) then if (dz<0) then orientation=20 else orientation=21 end end function moveToCoordinates(coord,orient) local error error=false local run run=true while (run and not(error)) do x,y,z=gps.locate() if (y>coord[1]) then error=not(turtle.down()) else if (y<coord[1]) then error=not(turtle.up()) else run=false end end end run=true x,y,z=gps.locate() while (run and not(error)) do if (x==coord[0]) then if (z==coord[2]) then run=false else if (z<coord[2]) then desiredorientation=21 else desiredorientation=20 end end else if (x<coord[0]) then desiredorientation=19 else desiredorientation=18 end end while (run and (not((desiredorientation==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==19) then orientation=20 else if (orientation==20) then orientation=18 else if (orientation==18) then orientation=21 else if (orientation==21) then orientation=19 end end end end end error=not(turtle.forward()) x,y,z=gps.locate() if ((x==coord[0]) and (z==coord[2])) then run=false end end run=true while (run and (not((orient==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==19) then orientation=20 else if (orientation==20) then orientation=18 else if (orientation==18) then orientation=21 else if (orientation==21) then orientation=19 end end end end end return(error) end local courier_slot courier_slot=1 function distance(coord1,coord2) local xDiff local yDiff local zDiff xDiff=(coord1[0]-coord2[0]) yDiff=(coord1[1]-coord2[1]) zDiff=(coord1[2]-coord2[2]) math.sqrt((((xDiff*xDiff)+(yDiff*yDiff))+(zDiff*zDiff))) end function checkFuel() local position local x local y local z x,y,z=gps.locate() (distance(fuel,(function() local t22={} t22[1]=x t22[2]=y t22[3]=z return t22 end)())<turtle.getFuelLevel()) end function sortItem() local error error=false moveToCoordinates(home,19) turtle.select(courier_slot) turtle.suck() local item local name local coord item=turtle.getItemDetail() if (nil==item) then error=true else name=item.name print(name) coord=map[name] print(coord) if (nil==coord) then error=true else moveToCoordinates(coord,20) turtle.dropUp() moveToCoordinates(home,19) end end return(error) end while (not(sortItem()) and checkFuel()) do  end if checkFuel() then print("Low on fuel.") end