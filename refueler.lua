function move(direction) local error if (direction==22) then error=not(turtle.down()) else if (direction==23) then error=not(turtle.up()) else if (direction==24) then error=not(turtle.turnLeft()) else if (direction==25) then error=not(turtle.turnRight()) else if (direction==26) then error=not(turtle.forward()) else if (direction==27) then error=not(turtle.back()) else error=true end end end end end end return(error) end  local selectStack local selectStackTop selectStack=(function() local t128={} return t128 end)() selectStackTop=0 function pushSelect(index) selectStackTop=(selectStackTop+1) selectStack[selectStackTop]=turtle.getSelectedSlot() turtle.select(index) end function popSelect() turtle.select(selectStack[selectStackTop]) selectStackTop=(selectStackTop-1) end move(22) move(22) turtle.suckDown() move(26) move(26) move(26) move(26) move(25) move(26) turtle.drop() move(24) move(26) move(25) move(26) move(26) move(26) move(26) move(26) move(26) move(26) move(25) move(26) turtle.suckDown() move(27) move(24) move(27) move(27) move(27) move(27) move(27) move(27) move(27) move(24) move(27) move(25) move(27) move(24) move(27) move(27) move(27) move(27) move(23) move(23) local totalItems local totalCraftedItems local gridSize gridSize=9 totalItems=turtle.getItemCount() totalCraftedItems=math.floor((totalItems/gridSize)) totalUnusedItems=(totalItems%gridSize) turtle.drop(totalUnusedItems) for _, number in ipairs((function() local t129={} t129[0]=2 t129[1]=3 t129[2]=5 t129[3]=6 t129[4]=7 t129[5]=9 t129[6]=10 t129[7]=11 return t129 end)()) do turtle.transferTo(i,totalCraftedItems) end turtle.craft(totalCraftedItems) turtle.refuel(1)