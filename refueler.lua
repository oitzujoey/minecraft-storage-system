function move(direction) local error if (direction==22) then error=not(turtle.down()) else if (direction==23) then error=not(turtle.up()) else if (direction==24) then error=not(turtle.turnLeft()) else if (direction==25) then error=not(turtle.turnRight()) else if (direction==26) then error=not(turtle.forward()) else if (direction==27) then error=not(turtle.back()) else error=true end end end end end end return(error) end  local selectStack local selectStackTop selectStack=(function() local t190={} return t190 end)() selectStackTop=0 function pushSelect(index) selectStackTop=(selectStackTop+1) selectStack[selectStackTop]=turtle.getSelectedSlot() turtle.select(index) end function popSelect() turtle.select(selectStack[selectStackTop]) selectStackTop=(selectStackTop-1) end local totalItems local totalCraftedItems local gridSize gridSize=9 move(22) move(22) turtle.suckDown() move(26) move(26) move(26) move(26) move(25) move(26) turtle.drop() move(24) move(26) move(25) move(26) move(26) move(26) move(26) move(26) move(26) move(26) move(25) move(26) turtle.suckDown() totalItems=turtle.getItemCount() totalCraftedItems=math.floor((totalItems/gridSize)) totalUnusedItems=(totalItems%gridSize) turtle.dropDown(totalUnusedItems) move(27) move(24) move(27) move(27) move(27) move(27) move(27) move(27) move(27) move(24) move(27) move(25) move(27) move(24) move(27) move(27) move(27) move(27) move(23) move(23) for _, number in ipairs((function() local t191={} t191[1]=2 t191[2]=3 t191[3]=5 t191[4]=6 t191[5]=7 t191[6]=9 t191[7]=10 t191[8]=11 return t191 end)()) do turtle.transferTo(number,totalCraftedItems) end turtle.craft(totalCraftedItems) turtle.refuel(1)