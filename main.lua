local map map=(function() local t111={} t111[2]=(function() local t112={} t112[1]=201 t112[2]=62 t112[3]=714 return t112 end)() t111[3]=(function() local t113={} t113[1]=179 t113[2]=62 t113[3]=718 return t113 end)() t111["minecraft:coal"]=(function() local t114={} t114[1]=180 t114[2]=62 t114[3]=697 return t114 end)() t111["minecraft:netherrack"]=(function() local t115={} t115[1]=181 t115[2]=62 t115[3]=697 return t115 end)() t111["create:shaft"]=(function() local t116={} t116[1]=182 t116[2]=62 t116[3]=697 return t116 end)() t111["thermal:apatite"]=(function() local t117={} t117[1]=183 t117[2]=62 t117[3]=697 return t117 end)() t111["minecraft:cobblestone"]=(function() local t118={} t118[1]=184 t118[2]=62 t118[3]=697 return t118 end)() t111["minecraft:ender_pearl"]=(function() local t119={} t119[1]=201 t119[2]=62 t119[3]=713 return t119 end)() t111["forbidden_arcanus:ender_pearl_fragment"]=(function() local t120={} t120[1]=201 t120[2]=62 t120[3]=714 return t120 end)() t111["minecraft:light_gray_wool"]=(function() local t121={} t121[1]=201 t121[2]=62 t121[3]=715 return t121 end)() t111["create:andesite_alloy"]=(function() local t122={} t122[1]=201 t122[2]=62 t122[3]=716 return t122 end)() t111["minecraft:chest"]=(function() local t123={} t123[1]=201 t123[2]=62 t123[3]=718 return t123 end)() return t111 end)() local home local fuel home=map[2] fuel=map[3] local orientation local desiredorientation orientation=17 local error error=false local ox local oy local oz local x local y local z local dx local dy local dz error=not(turtle.back()) ox,oy,oz=gps.locate() error=not(turtle.forward()) x,y,z=gps.locate() dx=(x-ox) dz=(z-oz) if not (dx==0) then if (dx<0) then orientation=18 else orientation=19 end end if not (dz==0) then if (dz<0) then orientation=20 else orientation=21 end end function moveToCoordinates(coord,orient) local error error=false local run run=true while (run and not(error)) do x,y,z=gps.locate() if (y>coord[2]) then error=not(turtle.down()) else if (y<coord[2]) then error=not(turtle.up()) else run=false end end end run=true x,y,z=gps.locate() while (run and not(error)) do if (x==coord[1]) then if (z==coord[3]) then run=false else if (z<coord[3]) then desiredorientation=21 else desiredorientation=20 end end else if (x<coord[1]) then desiredorientation=19 else desiredorientation=18 end end while (run and (not((desiredorientation==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==19) then orientation=20 else if (orientation==20) then orientation=18 else if (orientation==18) then orientation=21 else if (orientation==21) then orientation=19 end end end end end error=not(turtle.forward()) x,y,z=gps.locate() if ((x==coord[1]) and (z==coord[3])) then run=false end end run=true while (run and (not((orient==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==19) then orientation=20 else if (orientation==20) then orientation=18 else if (orientation==18) then orientation=21 else if (orientation==21) then orientation=19 end end end end end return(error) end local courier_slot courier_slot=1 function distance(coord1,coord2) local xDiff local yDiff local zDiff xDiff=(coord1[1]-coord2[1]) yDiff=(coord1[2]-coord2[2]) zDiff=(coord1[3]-coord2[3]) return(math.sqrt((((xDiff*xDiff)+(yDiff*yDiff))+(zDiff*zDiff)))) end function enoughFuel() local x local y local z x,y,z=gps.locate() return((distance(fuel,(function() local t124={} t124[1]=x t124[2]=y t124[3]=z return t124 end)())<turtle.getFuelLevel())) end function sortItem() local error error=false moveToCoordinates(home,19) turtle.select(courier_slot) turtle.suck() local item local name local coord item=turtle.getItemDetail() if (nil==item) then error=true else name=item.name print(name) coord=map[name] print(coord) if (nil==coord) then error=true else moveToCoordinates(coord,20) turtle.dropUp() moveToCoordinates(home,19) end end return(error) end while (not(sortItem()) and enoughFuel()) do  end if not(enoughFuel()) then print("Low on fuel.") end