local map map=(function() local t186={} t186[2]=(function() local t187={} t187[0]=201 t187[1]=62 t187[2]=714 return t187 end)() t186[3]=(function() local t188={} t188[0]=179 t188[1]=62 t188[2]=718 return t188 end)() t186["minecraft:coal"]=(function() local t189={} t189[0]=180 t189[1]=62 t189[2]=697 return t189 end)() t186["minecraft:netherrack"]=(function() local t190={} t190[0]=181 t190[1]=62 t190[2]=697 return t190 end)() t186["create:shaft"]=(function() local t191={} t191[0]=182 t191[1]=62 t191[2]=697 return t191 end)() t186["thermal:apatite"]=(function() local t192={} t192[0]=183 t192[1]=62 t192[2]=697 return t192 end)() t186["minecraft:cobblestone"]=(function() local t193={} t193[0]=184 t193[1]=62 t193[2]=697 return t193 end)() t186["minecraft:ender_pearl"]=(function() local t194={} t194[0]=201 t194[1]=62 t194[2]=713 return t194 end)() t186["forbidden_arcanus:ender_pearl_fragment"]=(function() local t195={} t195[0]=201 t195[1]=62 t195[2]=714 return t195 end)() t186["minecraft:light_gray_wool"]=(function() local t196={} t196[0]=201 t196[1]=62 t196[2]=715 return t196 end)() return t186 end)() local home local fuel home=map[2] fuel=map[3] local orientation local desiredorientation orientation=7 local error error=false local ox local oy local oz local x local y local z local dx local dy local dz error=not(turtle.back()) ox,oy,oz=gps.locate() error=not(turtle.forward()) x,y,z=gps.locate() dx=(x-ox) dz=(z-oz) if not (dx==0) then if (dx<0) then orientation=8 else orientation=9 end end if not (dz==0) then if (dz<0) then orientation=10 else orientation=11 end end function moveToCoordinates(coord,orient) local error error=false local run run=true while (run and not(error)) do x,y,z=gps.locate() if (y>coord[1]) then error=not(turtle.down()) else if (y<coord[1]) then error=not(turtle.up()) else run=false end end end run=true x,y,z=gps.locate() while (run and not(error)) do if (x==coord[0]) then if (z==coord[2]) then run=false else if (z<coord[2]) then desiredorientation=11 else desiredorientation=10 end end else if (x<coord[0]) then desiredorientation=9 else desiredorientation=8 end end while (run and (not((desiredorientation==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==9) then orientation=10 else if (orientation==10) then orientation=8 else if (orientation==8) then orientation=11 else if (orientation==11) then orientation=9 end end end end end error=not(turtle.forward()) x,y,z=gps.locate() if ((x==coord[0]) and (z==coord[2])) then run=false end end run=true while (run and (not((orient==orientation)) and not(error))) do error=not(turtle.turnLeft()) if (orientation==9) then orientation=10 else if (orientation==10) then orientation=8 else if (orientation==8) then orientation=11 else if (orientation==11) then orientation=9 end end end end end return(error) end local courier_slot courier_slot=1 function sortItem() local error error=false moveToCoordinates(home,9) turtle.select(courier_slot) turtle.suck() local item local name local coord item=turtle.getItemDetail() if (nil==item) then error=true else name=item.name print(name) coord=map[name] print(coord) if (nil==coord) then error=true else moveToCoordinates(coord,10) turtle.dropUp() moveToCoordinates(home,9) end end return(error) end while not(sortItem()) do  end